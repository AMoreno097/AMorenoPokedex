@model ML.Pokemon
@{
    ViewData["Title"] = "VistaDetalle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
  <div class="modal" tabindex="-1" role="dialog" id="modalPromociones">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Ingresa Nuevo Dependiente</h4>
                    <button type="button" class="close" data-dismiss="modal">×</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">

                    @using (Html.BeginForm("FormDependiente", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        //Nombres y Apellidos
                        <div class="row">
                            <div>
                                @Html.LabelFor(model => model.IdDependiente, new { @class = "visually-hidden" })

                                @Html.TextBoxFor(model => model.IdDependiente, new { @class = "visually-hidden form-control" })

                                @Html.ValidationMessageFor(model => model.IdDependiente)

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Nombre)

                                <div class="input-group">
                                    <span class="input-group-text"><i class="fa-solid fa-user-pen" style="color: #000000;"></i></span>
                                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "SoloLetras(event,'txtNombre','lblNombre')",@autocomplete = "off"})

                                    @Html.ValidationMessageFor(model => model.Nombre)

                                    @Html.Label(null, "", new{@id="lblNombre"})
                                </div>


                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ApellidoPaterno)

                                <div class="input-group">
                                    <span class="input-group-text"><i class="fa-solid fa-user-pen" style="color: #000000;"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno" ,@onkeypress = "SoloLetras(event,'txtApellidoPaterno','lblApellidoPaterno')",@autocomplete = "off"})

                                    @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                                    @Html.Label(null, "", new {@id="lblApellidoPaterno"})
                                </div>

                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(model => model.ApellidoMaterno)

                                <div class="input-group">

                                    <span class="input-group-text"><i class="fa-solid fa-user-pen" style="color: #000000;"></i></span>
                                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno" ,@onkeypress = "SoloLetras(event,'txtApellidoMaterno','lblApellidoMaterno')" ,@autocomplete = "off"})

                                    @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                                    @Html.Label(null, "", new{@id="lblApellidoMaterno"})

                                </div>

                            </div>

                        </div>

